{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Documents\\\\react\\\\reactpractice\\\\expenses\\\\src\\\\components\\\\Expenses\\\\Expenses.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport ExpenseItem from \"./ExpenseItem\";\nimport Card from \"../UI/Card\";\nimport \"./Expenses.css\";\nimport ExpenseFilter from \"./ExpensesFilter\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Expenses = props => {\n  _s();\n\n  const [filteredYear, setFilteredYear] = useState(\"2020\");\n\n  const filteredChangeHandler = selectedYear => {\n    console.log(\"Expenses.js\");\n    setFilteredYear(selectedYear);\n  };\n\n  const filteredExpenses = props.items.filter(expense => {\n    return expense.date.getFullYear().toString() === filteredYear;\n  });\n\n  let expensesContent = /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"NO Expenses found.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 25\n  }, this);\n\n  if (filteredExpenses.length > 0) {\n    expensesContent = filteredExpenses.map(expense => /*#__PURE__*/_jsxDEV(ExpenseItem, {\n      title: expense.title,\n      amount: expense.amount,\n      date: expense.date\n    }, expense.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this));\n  }\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: \"expenses\",\n    children: [/*#__PURE__*/_jsxDEV(ExpenseFilter, {\n      selected: filteredYear,\n      onChangeFilter: filteredChangeHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), filteredExpenses.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No Expenses Found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 39\n    }, this), filteredExpenses.length > 0 && filteredExpenses.map(expense => /*#__PURE__*/_jsxDEV(ExpenseItem, {\n      title: expense.title,\n      amount: expense.amount,\n      date: expense.date\n    }, expense.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Expenses, \"N/aF5O1Q1Yumn7zBaSWVzvWGO2A=\");\n\n_c = Expenses;\nexport default Expenses;\n\nvar _c;\n\n$RefreshReg$(_c, \"Expenses\");","map":{"version":3,"names":["React","useState","ExpenseItem","Card","ExpenseFilter","Expenses","props","filteredYear","setFilteredYear","filteredChangeHandler","selectedYear","console","log","filteredExpenses","items","filter","expense","date","getFullYear","toString","expensesContent","length","map","title","amount","id"],"sources":["C:/Users/user/Documents/react/reactpractice/expenses/src/components/Expenses/Expenses.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport ExpenseItem from \"./ExpenseItem\";\r\nimport Card from \"../UI/Card\";\r\nimport \"./Expenses.css\";\r\nimport ExpenseFilter from \"./ExpensesFilter\";\r\nconst Expenses = (props) => {\r\n  const [filteredYear, setFilteredYear] = useState(\"2020\");\r\n  const filteredChangeHandler = (selectedYear) => {\r\n    console.log(\"Expenses.js\");\r\n    setFilteredYear(selectedYear);\r\n  };\r\n  const filteredExpenses =props.items.filter(expense => {\r\n    return expense.date.getFullYear().toString()===filteredYear;\r\n  })\r\n  let expensesContent = <p>NO Expenses found.</p>;\r\n  if(filteredExpenses.length>0){\r\n    expensesContent=filteredExpenses.map((expense)=>(\r\n      <ExpenseItem\r\n      key={expense.id}\r\n      title={expense.title}\r\n      amount={expense.amount}\r\n      date={expense.date}\r\n    />\r\n\r\n    ))\r\n  }\r\n  return (\r\n    <Card className=\"expenses\">\r\n      <ExpenseFilter\r\n        selected={filteredYear}\r\n        onChangeFilter={filteredChangeHandler}\r\n      />\r\n      {filteredExpenses.length===0 && <p>No Expenses Found.</p>}\r\n      {filteredExpenses.length > 0 && (\r\n      filteredExpenses.map((expense) => (\r\n        <ExpenseItem\r\n          key={expense.id}\r\n          title={expense.title}\r\n          amount={expense.amount}\r\n          date={expense.date}\r\n        />\r\n      ))\r\n      )}\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Expenses;\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAO,gBAAP;AACA,OAAOC,aAAP,MAA0B,kBAA1B;;;AACA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;EAAA;;EAC1B,MAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCP,QAAQ,CAAC,MAAD,CAAhD;;EACA,MAAMQ,qBAAqB,GAAIC,YAAD,IAAkB;IAC9CC,OAAO,CAACC,GAAR,CAAY,aAAZ;IACAJ,eAAe,CAACE,YAAD,CAAf;EACD,CAHD;;EAIA,MAAMG,gBAAgB,GAAEP,KAAK,CAACQ,KAAN,CAAYC,MAAZ,CAAmBC,OAAO,IAAI;IACpD,OAAOA,OAAO,CAACC,IAAR,CAAaC,WAAb,GAA2BC,QAA3B,OAAwCZ,YAA/C;EACD,CAFuB,CAAxB;;EAGA,IAAIa,eAAe,gBAAG;IAAA;EAAA;IAAA;IAAA;IAAA;EAAA,QAAtB;;EACA,IAAGP,gBAAgB,CAACQ,MAAjB,GAAwB,CAA3B,EAA6B;IAC3BD,eAAe,GAACP,gBAAgB,CAACS,GAAjB,CAAsBN,OAAD,iBACnC,QAAC,WAAD;MAEA,KAAK,EAAEA,OAAO,CAACO,KAFf;MAGA,MAAM,EAAEP,OAAO,CAACQ,MAHhB;MAIA,IAAI,EAAER,OAAO,CAACC;IAJd,GACKD,OAAO,CAACS,EADb;MAAA;MAAA;MAAA;IAAA,QADc,CAAhB;EASD;;EACD,oBACE,QAAC,IAAD;IAAM,SAAS,EAAC,UAAhB;IAAA,wBACE,QAAC,aAAD;MACE,QAAQ,EAAElB,YADZ;MAEE,cAAc,EAAEE;IAFlB;MAAA;MAAA;MAAA;IAAA,QADF,EAKGI,gBAAgB,CAACQ,MAAjB,KAA0B,CAA1B,iBAA+B;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QALlC,EAMGR,gBAAgB,CAACQ,MAAjB,GAA0B,CAA1B,IACDR,gBAAgB,CAACS,GAAjB,CAAsBN,OAAD,iBACnB,QAAC,WAAD;MAEE,KAAK,EAAEA,OAAO,CAACO,KAFjB;MAGE,MAAM,EAAEP,OAAO,CAACQ,MAHlB;MAIE,IAAI,EAAER,OAAO,CAACC;IAJhB,GACOD,OAAO,CAACS,EADf;MAAA;MAAA;MAAA;IAAA,QADF,CAPF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAmBD,CAxCD;;GAAMpB,Q;;KAAAA,Q;AA0CN,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}