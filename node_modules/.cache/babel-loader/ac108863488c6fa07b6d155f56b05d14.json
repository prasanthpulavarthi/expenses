{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Documents\\\\react\\\\reactpractice\\\\expenses\\\\src\\\\components\\\\Expenses\\\\ExpensesChart.js\";\nimport React from \"react\";\nimport Chart from \"../Chart/Chart\";\nimport ChartBar from \"../Chart/ChartBar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ExpensesChart = props => {\n  const chartDataPoints = [{\n    label: 'Jan',\n    value: 0\n  }, {\n    label: 'Feb',\n    value: 0\n  }, {\n    label: 'Mar',\n    value: 0\n  }, {\n    label: 'Apr',\n    value: 0\n  }, {\n    label: 'MAy',\n    value: 0\n  }, {\n    label: 'Jun',\n    value: 0\n  }, {\n    label: 'JUl',\n    value: 0\n  }, {\n    label: 'Aug',\n    value: 0\n  }, {\n    label: 'Sep',\n    value: 0\n  }, {\n    label: 'Oct',\n    value: 0\n  }, {\n    label: 'Nov',\n    value: 0\n  }, {\n    label: 'Dec',\n    value: 0\n  }];\n\n  for (const expense of props.expenses) {\n    const expenseMonth = expense.date.getMonth();\n    chartDataPoints[expenseMonth].value += expense.amount;\n  }\n\n  return /*#__PURE__*/_jsxDEV(Chart, {\n    dataPoints: chartDataPoints\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n};\n\n_c = ExpensesChart;\nexport default ExpensesChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"ExpensesChart\");","map":{"version":3,"names":["React","Chart","ChartBar","ExpensesChart","props","chartDataPoints","label","value","expense","expenses","expenseMonth","date","getMonth","amount"],"sources":["C:/Users/user/Documents/react/reactpractice/expenses/src/components/Expenses/ExpensesChart.js"],"sourcesContent":["import React from \"react\";\r\nimport Chart from \"../Chart/Chart\";\r\nimport ChartBar from \"../Chart/ChartBar\";\r\nconst ExpensesChart = (props) => {\r\n    const chartDataPoints=[\r\n        {label:'Jan',value:0},\r\n        {label:'Feb',value:0},\r\n        {label:'Mar',value:0},\r\n        {label:'Apr',value:0},\r\n        {label:'MAy',value:0},\r\n        {label:'Jun',value:0},\r\n        {label:'JUl',value:0},\r\n        {label:'Aug',value:0},\r\n        {label:'Sep',value:0},\r\n        {label:'Oct',value:0},\r\n        {label:'Nov',value:0},\r\n        {label:'Dec',value:0},\r\n    ]\r\n    for (const expense of props.expenses){\r\n        const expenseMonth = expense.date.getMonth();\r\n        chartDataPoints[expenseMonth].value += expense.amount;\r\n    }\r\n    return (\r\n        <Chart dataPoints={chartDataPoints}/>\r\n    )\r\n};\r\nexport default ExpensesChart;"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,OAAOC,QAAP,MAAqB,mBAArB;;;AACA,MAAMC,aAAa,GAAIC,KAAD,IAAW;EAC7B,MAAMC,eAAe,GAAC,CAClB;IAACC,KAAK,EAAC,KAAP;IAAaC,KAAK,EAAC;EAAnB,CADkB,EAElB;IAACD,KAAK,EAAC,KAAP;IAAaC,KAAK,EAAC;EAAnB,CAFkB,EAGlB;IAACD,KAAK,EAAC,KAAP;IAAaC,KAAK,EAAC;EAAnB,CAHkB,EAIlB;IAACD,KAAK,EAAC,KAAP;IAAaC,KAAK,EAAC;EAAnB,CAJkB,EAKlB;IAACD,KAAK,EAAC,KAAP;IAAaC,KAAK,EAAC;EAAnB,CALkB,EAMlB;IAACD,KAAK,EAAC,KAAP;IAAaC,KAAK,EAAC;EAAnB,CANkB,EAOlB;IAACD,KAAK,EAAC,KAAP;IAAaC,KAAK,EAAC;EAAnB,CAPkB,EAQlB;IAACD,KAAK,EAAC,KAAP;IAAaC,KAAK,EAAC;EAAnB,CARkB,EASlB;IAACD,KAAK,EAAC,KAAP;IAAaC,KAAK,EAAC;EAAnB,CATkB,EAUlB;IAACD,KAAK,EAAC,KAAP;IAAaC,KAAK,EAAC;EAAnB,CAVkB,EAWlB;IAACD,KAAK,EAAC,KAAP;IAAaC,KAAK,EAAC;EAAnB,CAXkB,EAYlB;IAACD,KAAK,EAAC,KAAP;IAAaC,KAAK,EAAC;EAAnB,CAZkB,CAAtB;;EAcA,KAAK,MAAMC,OAAX,IAAsBJ,KAAK,CAACK,QAA5B,EAAqC;IACjC,MAAMC,YAAY,GAAGF,OAAO,CAACG,IAAR,CAAaC,QAAb,EAArB;IACAP,eAAe,CAACK,YAAD,CAAf,CAA8BH,KAA9B,IAAuCC,OAAO,CAACK,MAA/C;EACH;;EACD,oBACI,QAAC,KAAD;IAAO,UAAU,EAAER;EAAnB;IAAA;IAAA;IAAA;EAAA,QADJ;AAGH,CAtBD;;KAAMF,a;AAuBN,eAAeA,aAAf"},"metadata":{},"sourceType":"module"}